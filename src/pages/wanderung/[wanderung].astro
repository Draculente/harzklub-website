---
import ImageGallery from "@components/ImageGallery.svelte";
import Tag from "@components/Tag.astro";
import Layout from "@layouts/Layout.astro";
import type { Wanderung } from "@lib/gql/graphql";
import { wanderungenQuery } from "@lib/graphql/queries";
import type { Image } from "@lib/imageGallery";
import gqlClient from "@lib/utils/gql-client";
import { dauerToString, getFileUrl, getSchwierigkeit } from "@lib/utils/helper";

export async function getStaticPaths() {
    return (await gqlClient.request(wanderungenQuery)).wanderung.map((e) => {
        return {
            params: { wanderung: e.id },
            props: e,
        };
    });
}

const {
    titel,
    strecke,
    schwierigkeitsgrad,
    dauer,
    featured_image,
    wander_step,
    description,
    link,
} = Astro.props as Wanderung;

const stats = [
    {
        icon: "ri-route-line",
        text: `${strecke} km`,
    },
    {
        icon: "ri-scales-line",
        text: `${getSchwierigkeit(schwierigkeitsgrad ?? undefined)}`,
    },
    {
        icon: "ri-time-line",
        text: `ca. ${dauer} h`,
    },
];
---

<Layout description={description ?? undefined} title={titel ?? undefined}>
    <div
        class="pt-10 pb-32 2xl:px-[12%] xl:px-[5%] lg:px-[5%] xs:px-[5%] md:px-[15%]"
    >
        <section class="w-full">
            <div
                class="relative h-96 w-full overflow-hidden rounded-lg flex justify-center items-center"
            >
                <img
                    class="min-h-full min-w-full object-cover z-0"
                    src={getFileUrl(featured_image?.id)}
                    alt={featured_image?.description ?? "Featured Image"}
                />
                <div
                    class="z-10 absolute flex flex-row gap-5 items-center justify-center -mt-10 flex-wrap mx-4"
                >
                    <div
                        class="bg-info rounded-lg flex flex-row w-64 px-5 py-5 place-content-around gap-5 flex-wrap"
                    >
                        {
                            stats.map((element) => {
                                return (
                                    <div class="flex justify-center items-center flex-col">
                                        <i
                                            class={
                                                "dark:text-light-grey text-dark-grey " +
                                                element.icon
                                            }
                                        />
                                        <p class="dark:text-light-grey text-dark-grey text-sm font-medium p-0 -mt-1">
                                            {element.text}
                                        </p>
                                    </div>
                                );
                            })
                        }
                    </div>
                    {
                        link ? (
                            <div class="flex items-center justify-center bg-info rounded-lg px-5 py-5">
                                <a
                                    href={link}
                                    class="flex justify-center items-center flex-col"
                                >
                                    <i
                                        class={
                                            "dark:text-light-grey text-dark-grey ri-map-2-line"
                                        }
                                    />
                                    <p class="dark:text-light-grey text-dark-grey text-sm font-medium p-0 -mt-1">
                                        Karte
                                    </p>
                                </a>
                            </div>
                        ) : (
                            <div />
                        )
                    }
                </div>
            </div>
            <div
                class="flex flex-col gap-2 min-w-80 max-w-2xl rounded-t-2xl mx-auto -translate-y-10 z-10 bg-base-100 py-6 px-5 relative mb-5"
            >
                <div class="absolute left-5 -top-3">
                    <Tag title={dauerToString(dauer ?? undefined)} />
                </div>

                <h1 class="text-3xl font-bold">{titel}</h1>
                <p class="text-gray-80">{description}</p>
            </div>
        </section>
        <section class="flex justify-center">
            <div class="zeitleiste after:bg-info-content flex gap-20 flex-col">
                {
                    wander_step?.map((e, i) => {
                        const left = i % 2 === 0;
                        const bilder = e?.bilder?.length;
                        return (
                            <div
                                class={`step after:bg-info-content box-border w-full flex ${
                                    left ? "flex-row" : "flex-row-reverse"
                                } sm:flex-col gap-20 sm:gap-5 justify-center sm:justify-start sm:pl-10`}
                            >
                                <div
                                    class={`text basis-1/2 ${
                                        left ? "text-right" : "text-left"
                                    } sm:text-left flex items-center`}
                                >
                                    <p>{e?.description}</p>
                                </div>
                                <div
                                    class={`images basis-1/2 ${
                                        left
                                            ? ""
                                            : "flex justify-end items-end sm:justify-start sm:items-start"
                                    }`}
                                >
                                    {bilder ? (
                                        <ImageGallery
                                            images={
                                                e?.bilder?.map((e): Image => {
                                                    const {
                                                        description,
                                                        title,
                                                        id,
                                                        location,
                                                        metadata,
                                                    } = e!.directus_files_id!;

                                                    return {
                                                        description:
                                                            description ??
                                                            undefined,
                                                        title:
                                                            title ?? undefined,
                                                        src: getFileUrl(id)!,
                                                        id: id!,
                                                        location:
                                                            location ??
                                                            undefined,
                                                        metadata:
                                                            metadata ??
                                                            undefined,
                                                    };
                                                })!
                                            }
                                            client:load
                                            small={true}
                                            showInfo={true}
                                        />
                                    ) : (
                                        <div />
                                    )}
                                </div>
                            </div>
                        );
                    })
                }
            </div>
        </section>
    </div>
</Layout>

<style>
    .zeitleiste {
        position: relative;
        width: 100%;
        max-width: 1200px;
    }

    .zeitleiste:after {
        content: "";
        position: absolute;
        width: 2px;
        top: 0;
        bottom: 0;
        left: 50%;
        margin-left: -1px;
    }

    .step {
        position: relative;
    }

    .step::after {
        content: "";
        position: absolute;
        width: 10px;
        height: 10px;
        top: 50%;
        border-radius: 50%;
        z-index: 1;
        left: 50%;
        transform: translateX(-50%) translateY(-50%);
    }

    @media (max-width: 768px) {
        .zeitleiste:after {
            left: 1.25rem;
        }

        .step::after {
            left: 1.25rem;
        }
    }
</style>
