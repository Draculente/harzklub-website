---
import gqlClient from "@lib/utils/gql-client";
import { aktuellesQuery, veranstaltungsQuery } from "@lib/graphql/queries";
import { Seite } from "@lib/links";
import VeranstaltungsList from "@components/VeranstaltungsList.astro";
import rrule from "rrule";
import SimplePageLayout from "@layouts/SimplePageLayout.astro";
import { getNextOccurence } from "@lib/utils/date-helper";

const { rrulestr, RRule } = rrule;

const { veranstaltung: veranstaltungen } = await gqlClient.request(
  veranstaltungsQuery
);

const { aktuelles: aktuellesPageDate } = await gqlClient.request(
  aktuellesQuery
);

const rEvents = veranstaltungen
  .filter((e) => e.recurring && e.wiederholung)
  .map((e) => {
    // count: 1, because we only want the next event
    // const rrule = new RRule(
    //   { ...rrulestr(e.wiederholung!).options, count: 1 },
    //   false
    // );
    // const date = rrule.after(new Date());
    const date = getNextOccurence(e.wiederholung!, e.datum!);
    return { ...e, datum: date };
  });

const nextEvents = veranstaltungen.filter(
  (event) => !event.recurring && new Date(event.datum) > new Date()
);
---

<SimplePageLayout
  title={aktuellesPageDate?.title ?? "Aktuelles"}
  description={aktuellesPageDate?.description ?? undefined}
  page={Seite.Aktuelles}
  subtitle={aktuellesPageDate?.subtitle ?? "Veranstaltungen und mehr!"}
  text={aktuellesPageDate?.text ?? undefined}
>
  <h2 class="font-medium text-3xl mt-10">Veranstaltungen</h2>
  <div class="next-events">
    <VeranstaltungsList veranstaltungen={nextEvents} />
  </div>
  <h2 class="font-medium text-3xl">Vereinsleben</h2>
  <div class="past-events">
    <VeranstaltungsList veranstaltungen={rEvents} />
  </div>
</SimplePageLayout>
